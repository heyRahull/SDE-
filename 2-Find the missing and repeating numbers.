Method 1 (Use Sorting) - T.C = O(nlogn)
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int main()
{
   int arr[] = {4,3,6,2,1,1};
   int n = sizeof(arr)/sizeof(arr[0]);
   int rep;

   sort(arr,arr+n);
   // 1,1,2,3,4,6
   for(int i=1;i<n;i++)
   {
       if(arr[i]==arr[i-1])
       rep = arr[i];
   }

int sumN = (n*(n+1))/2;
int sum = 0; 
   for(int j=0;j<n;j++)
   {
       sum = sum + arr[j];
   }

   cout<<"repeating number "<<rep<<"\n";
   cout<<"missing number "<<sumN - sum + rep; 

}
------------------------------------------------------------------------------------------------

Method 2 (Usig count array) -T.C = O(N), S.C = O(N)
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int main()
{
   int arr[] = {4,3,6,2,1,1};
   int n = sizeof(arr)/sizeof(arr[0]);
   int temp[n];  

    for(int i=0;i<n;i++)
    {
        temp[i]=0;
    }

    for(int i=0;i<n;i++)
    {
        if(temp[arr[i]-1]==0)
        temp[arr[i]-1]=1;
        else
        cout<<"repeating elem : "<<arr[i]<<"\n"; 
    }

    for(int i=0;i<n;i++)
    {
        if(temp[i]==0)
        cout<<"missing elem : "<<i+1;
    }
}
-------------------------------------------------------------------------------------------

Method 3 (Negation of Index) - T.C = O(N), S.C = O(1)
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int main()
{
   int arr[] = {4,3,6,2,1,1};
   int n = sizeof(arr)/sizeof(arr[0]);

    for(int i=0;i<n;i++)
    {
        if(arr[abs(arr[i])-1]>0)
        arr[abs(arr[i])-1] = - arr[abs(arr[i])-1];
        else
        cout<<"Repeating elem : "<<abs(arr[i]);

    }

    for(int i=0;i<n;i++)
    {
        if(arr[i]>0)
        cout<<"missing elem : "<<i+1;
    }
}

-----------------------------------------------------------------------------------------------

Method 4 (make two equations using sum and sum of square) T.C = O(N),S.C =O(1)
